{"version":3,"sources":["../../src/controller/city.js"],"names":["config","require","process","env","NODE_ENV","db","api","post","req","res","console","log","body","newCity","name","save","err","status","send","get","find","city","json","findById","params","id","put","delete","restaurants","forEach","findByIdAndRemove","elem","restaurant","then","remove","_id","message"],"mappings":"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","file":"city.js","sourcesContent":["import mongoose from 'mongoose';\nimport { Router } from 'express';\nimport Restaurant from '../model/restaurant';\nimport City from '../model/city';\nimport Account from '../model/account';\nvar config = require('../config/env.json')[process.env.NODE_ENV || 'development'];\n\n\nimport { authenticate } from '../middleware/authMiddleware';\n\nexport default({ config, db }) => {\n  let api = Router();\n\n\napi.post('/add', authenticate, (req, res) => {\n  console.log(req.body)\n  let newCity = new City();\n  newCity.name = req.body.name;\n  newCity.save(err => {\n    if (err) {\n      res.status(500).send(\"There was a problem adding the information to the database.\");\n    }\n    res.status(200).send(newCity);\n  });\n});\napi.get('/', (req, res) => {\n  City.find({}, (err, city) => {\n    if (err) {\n      res.status(500).send(\"There was a problem reading the information from the database.\");\n    }\n    res.status(200).json(city);\n  })\n})\n\napi.get('/:id', (req, res) => {\n  City.findById(req.params.id, (err, city) => {\n    if(err) {\n      res.status(500).send(\"There was a problem reading the information from the database.\");\n    }\n    res.status(200).json(city);\n  });\n});\n\napi.put('/:id', authenticate, (req, res) => {\n  City.findById(req.params.id, (err, city) => {\n    if (err) {\n      res.send(err);\n    }\n    city.name = req.body.name;\n    city.save(err => {\n      if (err) {\n      res.send(err);\n    }\n    res.status(200).send(city)\n    });\n  });\n});\n\napi.delete('/:id', (req, res) => {\n  City.findById(req.params.id, (err, city) => {\n    if (err) {\n      res.status(500).send(\"There was a problem adding the information to the database.\");\n    }\n    console.log(city.restaurants)\n  city.restaurants.forEach( elem => {\n    Restaurant.findByIdAndRemove(elem, (err, restaurant) => {\n      console.log(elem)\n    });\n  })\n  }).then(\n    City.remove({\n      _id: req.params.id\n    }, (err, city) => {\n      if (err) {\n        res.send(err);\n      }\n      res.status(200).json({ message: \"City Succesfully Removed\"})\n    })\n  )\n  });\nreturn api;\n}"]}