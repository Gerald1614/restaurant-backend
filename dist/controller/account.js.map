{"version":3,"sources":["../../src/controller/account.js"],"names":["config","require","process","env","NODE_ENV","db","api","post","req","res","register","username","body","email","name","password","err","account","send","authenticate","session","status","scope","get","logout","json","user"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AAGA;;;;AAFA,IAAIA,SAASC,QAAQ,oBAAR,EAA8BC,QAAQC,GAAR,CAAYC,QAAZ,IAAwB,aAAtD,CAAb;;kBAIe,gBAAmB;AAAA,MAAhBJ,MAAgB,QAAhBA,MAAgB;AAAA,MAARK,EAAQ,QAARA,EAAQ;;AAChC,MAAIC,MAAM,sBAAV;;AAEFA,MAAIC,IAAJ,CAAS,WAAT,EAAsB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAClC,sBAAQC,QAAR,CAAiB,sBAAY,EAAEC,UAAUH,IAAII,IAAJ,CAASC,KAArB,EAA4BC,MAAMN,IAAII,IAAJ,CAASE,IAA3C,EAAZ,CAAjB,EAAgFN,IAAII,IAAJ,CAASG,QAAzF,EAAmG,UAASC,GAAT,EAAcC,OAAd,EAAuB;AACxH,UAAID,GAAJ,EAAS;AACPP,YAAIS,IAAJ,CAASF,GAAT;AACD;AACD,yBAASG,YAAT,CACE,OADF,EACW;AACPC,iBAAS;AADF,OADX,EAGKZ,GAHL,EAGUC,GAHV,EAGe,YAAM;AACjBA,YAAIY,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB,gCAArB;AACD,OALH;AAMD,KAVD;AAWD,GAZD;;AAcAZ,MAAIC,IAAJ,CAAS,QAAT,EAAmB,mBAASY,YAAT,CACjB,OADiB,EACR;AACPC,aAAS,KADF;AAEPE,WAAO;AAFA,GADQ,CAAnB;;AAOAhB,MAAIiB,GAAJ,CAAQ,SAAR,gCAAiC,UAACf,GAAD,EAAMC,GAAN,EAAc;AAC7CA,QAAIe,MAAJ;AACAf,QAAIY,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB,wBAArB;AACD,GAHD;;AAKAZ,MAAIiB,GAAJ,CAAQ,KAAR,gCAA6B,UAACf,GAAD,EAAMC,GAAN,EAAc;AACzCA,QAAIY,MAAJ,CAAW,GAAX,EAAgBI,IAAhB,CAAqBjB,IAAIkB,IAAzB;AACD,GAFD;;AAIE,SAAOpB,GAAP;AACD,C","file":"account.js","sourcesContent":["import mongoose from 'mongoose';\nimport { Router } from 'express';\nimport Account from '../model/account';\nimport bodyParser from 'body-parser';\nimport passport from 'passport';\nvar config = require('../config/env.json')[process.env.NODE_ENV || 'development'];\n\nimport { generateAccessToken, respond, authenticate } from '../middleware/authMiddleware';\n\nexport default ({ config, db}) => {\n  let api = Router();\n\napi.post('/register', (req, res) => {\n  Account.register(new Account({ username: req.body.email, name: req.body.name}), req.body.password, function(err, account) {\n    if (err) {\n      res.send(err);\n    }\n    passport.authenticate(\n      'local', {\n        session: false\n      })(req, res, () => {\n        res.status(200).send('Succesfully create new Account');\n      });\n  });\n});\n\napi.post('/login', passport.authenticate(\n  'local', {\n    session: false,\n    scope: []\n  }), generateAccessToken, respond)\n\n\napi.get('/logout', authenticate, (req, res) => {\n  res.logout();\n  res.status(200).send('Succesfully logged Out');\n});\n\napi.get('/me', authenticate, (req, res) => {\n  res.status(200).json(req.user);\n});\n\n  return api\n}"]}